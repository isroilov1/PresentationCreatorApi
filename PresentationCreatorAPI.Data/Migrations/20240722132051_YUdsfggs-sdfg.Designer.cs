// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PresentationCreatorAPI.Data;

#nullable disable

namespace PresentationCreatorAPI.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240722132051_YUdsfggs-sdfg")]
    partial class YUdsfggssdfg
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PresentationCreatorAPI.Domain.Entites.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("RecipientIds")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("PresentationCreatorAPI.Domain.Entites.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImagesPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("PageNumber")
                        .HasColumnType("smallint");

                    b.Property<int>("PageType")
                        .HasColumnType("integer");

                    b.Property<int>("PresentationId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PresentationId");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("PresentationCreatorAPI.Domain.Entites.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminCaption")
                        .HasColumnType("text");

                    b.Property<string>("Caption")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Summa")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PresentationCreatorAPI.Domain.Entites.Presentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("ImagesPaths")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<byte>("PageCount")
                        .HasColumnType("smallint");

                    b.Property<int>("Template")
                        .HasColumnType("integer");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("Titles")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Presentation");
                });

            modelBuilder.Entity("PresentationCreatorAPI.Domain.Entites.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Balance")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PresentationCount")
                        .HasColumnType("integer");

                    b.Property<bool>("ReferalBonus")
                        .HasColumnType("boolean");

                    b.Property<int?>("ReferalId")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int?>("TelegramId")
                        .HasColumnType("integer");

                    b.Property<int>("TotalPayments")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 20000,
                            CreatedAt = new DateTime(2024, 7, 22, 13, 20, 50, 870, DateTimeKind.Utc).AddTicks(5534),
                            Email = "isroilov0905@gmail.com",
                            FullName = "Isroilov Ismoiljon",
                            IsVerified = true,
                            Password = "6724ce39c81234bc9a25eca98b634a94a913e514a2191371b63b30dd3869c754",
                            PhoneNumber = "+998997979898",
                            PresentationCount = 0,
                            ReferalBonus = false,
                            Role = 1,
                            TotalPayments = 0
                        });
                });

            modelBuilder.Entity("PresentationCreatorAPI.Domain.Entites.Notification", b =>
                {
                    b.HasOne("PresentationCreatorAPI.Domain.Entites.User", null)
                        .WithMany("Notifications")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PresentationCreatorAPI.Domain.Entites.Page", b =>
                {
                    b.HasOne("PresentationCreatorAPI.Domain.Entites.Presentation", "Presentation")
                        .WithMany("Pages")
                        .HasForeignKey("PresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presentation");
                });

            modelBuilder.Entity("PresentationCreatorAPI.Domain.Entites.Payment", b =>
                {
                    b.HasOne("PresentationCreatorAPI.Domain.Entites.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PresentationCreatorAPI.Domain.Entites.Presentation", b =>
                {
                    b.HasOne("PresentationCreatorAPI.Domain.Entites.User", "User")
                        .WithMany("Presentations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PresentationCreatorAPI.Domain.Entites.Presentation", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("PresentationCreatorAPI.Domain.Entites.User", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Payments");

                    b.Navigation("Presentations");
                });
#pragma warning restore 612, 618
        }
    }
}
